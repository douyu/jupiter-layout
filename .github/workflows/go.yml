name: Go

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        go: ["1.18.x", "1.19.x"]

    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3.1.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: docker-compose
        run: docker-compose -f deployment/docker-compose.yml up -d

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Get dependencies
        run: |
          go env
          go get -v -t -d ./...

      - name: Build
        run: |
          make init
          make generate
          go build -v ./cmd/...

      - name: Install ginkgo
        run: |
          go install github.com/onsi/ginkgo/v2/ginkgo@latest
          sudo cp ~/go/bin/ginkgo /usr/local/bin

      - name: Test
        run: |
          go test -coverprofile=coverage.txt -covermode=atomic ./...
          make e2e-test

      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ./coverage.txt, ./tests/e2e/coverage.txt
